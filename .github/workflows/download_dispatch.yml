name: ‰∏ãËΩΩJMÊú¨Â≠ê (dispatch)

on:
  workflow_dispatch:
    inputs:
      JM_ALBUM_IDS:
        type: string
        description: Êú¨Â≠êidÔºàÂ§ö‰∏™idÁî®-ÈöîÂºÄÔºåÂ¶Ç '123-456-789'Ôºâ
        required: false

      JM_PHOTO_IDS:
        type: string
        description: Á´†ËäÇidÔºàÂçïÁã¨‰∏ãËΩΩÁ´†ËäÇÔºåÂ§ö‰∏™idÂêå‰∏äÔºâ
        required: false

      CLIENT_IMPL:
        type: string
        description: ÂÆ¢Êà∑Á´ØÁ±ªÂûãÔºàclient.implÔºâÔºå‰∏ãËΩΩÂ§±Ë¥•Êó∂Ôºå‰Ω†ÂèØ‰ª•Â∞ùËØïÂ°´ÂÖ•Ê≠§È°πÈáçËØï„ÄÇ'api' Ë°®Á§∫ÁßªÂä®Á´ØÔºå'html' Ë°®Á§∫ÁΩëÈ°µÁ´Ø„ÄÇ
        default: ''
        required: false

      IMAGE_SUFFIX:
        type: string
        description: ÂõæÁâáÂêéÁºÄÔºàdownload.cache.suffixÔºâÔºåÈªòËÆ§‰∏∫Á©∫ÔºåË°®Á§∫‰∏çÂÅöÂõæÁâáÊ†ºÂºèËΩ¨Êç¢„ÄÇÂèØÂ°´ÂÖ•‰æãÂ¶Ç 'png' 'jpg'
        default: ''
        required: false

      DIR_RULE:
        type: string
        description: ‰∏ãËΩΩÊñá‰ª∂Â§πËßÑÂàôÔºàdir_rule.ruleÔºâ„ÄÇÈªòËÆ§‰ΩøÁî®ÈÖçÁΩÆÊñá‰ª∂ÁöÑ 'Bd_Aauthor_Atitle_Pindex'„ÄÇ
        default: ''
        required: false
        
      # ‚≠ê ‰øÆÊîπÔºöÊîπ‰∏∫ÈÄâÊã©Á±ªÂûã
      OUTPUT_FORMAT:
        type: choice
        description: ËæìÂá∫Ê†ºÂºèÈÄâÊã©
        options:
          - Âè™‰øùÁïôPDFÔºàÂà†Èô§ÂéüÂõæÔºâ
          - Âè™‰øùÁïôÂéüÂõæÔºà‰∏çËΩ¨PDFÔºâ
        default: Âè™‰øùÁïôPDFÔºàÂà†Èô§ÂéüÂõæÔºâ
        required: true

      # ÈÇÆ‰ª∂ÈÄâÈ°π
      EMAIL_TO_INPUT:
        type: string
        description: Êî∂‰ª∂‰∫∫ÈÇÆÁÆ±ÔºàÂèØÈÄâÔºå‰∏çÂ°´Âàô‰∏çÂèëÈÄÅÈÇÆ‰ª∂Ôºâ
        default: ''
        required: false
        
      ZIP_NAME:
        type: string
        default: Êú¨Â≠ê.tar.gz
        description: ÂéãÁº©Êñá‰ª∂ÂêçÁß∞
        required: false

      UPLOAD_NAME:
        type: string
        default: Click me to download
        description: ‰∏ä‰º†Êñá‰ª∂ÂêçÁß∞
        required: false


jobs:
  crawler:
    runs-on: ubuntu-latest
    env:
      # Â∑•‰ΩúÊµÅËæìÂÖ•
      JM_ALBUM_IDS: ${{ github.event.inputs.JM_ALBUM_IDS }}
      JM_PHOTO_IDS: ${{ github.event.inputs.JM_PHOTO_IDS }}
      DIR_RULE: ${{ github.event.inputs.DIR_RULE }}
      CLIENT_IMPL: ${{ github.event.inputs.CLIENT_IMPL }}
      ZIP_NAME: ${{ github.event.inputs.ZIP_NAME }}
      UPLOAD_NAME: ${{ github.event.inputs.UPLOAD_NAME }}
      IMAGE_SUFFIX: ${{ github.event.inputs.IMAGE_SUFFIX }}
      OUTPUT_FORMAT: ${{ github.event.inputs.OUTPUT_FORMAT }}
      
      # ÁôªÂΩïÁõ∏ÂÖ≥secrets
      JM_USERNAME: ${{ secrets.JM_USERNAME }}
      JM_PASSWORD: ${{ secrets.JM_PASSWORD }}

      # ÈÇÆ‰ª∂Áõ∏ÂÖ≥secrets
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
      EMAIL_TO: ${{ github.event.inputs.EMAIL_TO_INPUT || secrets.EMAIL_TO }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      EMAIL_TITLE: ${{ secrets.EMAIL_TITLE }}
      EMAIL_CONTENT: ${{ secrets.EMAIL_CONTENT }}

      # Âõ∫ÂÆöÂÄº
      JM_DOWNLOAD_DIR: /home/runner/work/jmcomic/download/

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Dependency
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          # ‚≠ê Âè™Âú®ÈúÄË¶ÅPDFÊó∂ÂÆâË£Ö img2pdf
          if [ "$OUTPUT_FORMAT" == "Âè™‰øùÁïôPDFÔºàÂà†Èô§ÂéüÂõæÔºâ" ]; then
            pip install img2pdf
            echo "‚úÖ Â∑≤ÂÆâË£Ö img2pdf Êèí‰ª∂"
          else
            echo "‚ÑπÔ∏è Ë∑≥Ëøá img2pdf ÂÆâË£ÖÔºàÂè™‰øùÁïôÂéüÂõæÊ®°ÂºèÔºâ"
          fi
          
      - name: ÂÆâË£ÖjmcomicÔºàpipÔºâ
        if: ${{ github.ref != 'refs/heads/dev' }}
        run: |
          pip install jmcomic -i https://pypi.org/project --upgrade

      - name: ÂÆâË£ÖjmcomicÔºàlocalÔºâ
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: |
          pip install -e ./
          
      - name: Ê£ÄÊü•ÈÇÆ‰ª∂ÈÖçÁΩÆ
        run: |
          echo "========================================"
          echo "üìß ÈÇÆ‰ª∂ÈÖçÁΩÆÊ£ÄÊü•"
          echo "========================================"
          
          if [ -n "$EMAIL_FROM" ]; then
            echo "‚úÖ EMAIL_FROM: ${EMAIL_FROM:0:3}***@${EMAIL_FROM##*@}"
          else
            echo "‚ùå EMAIL_FROM: Êú™ÈÖçÁΩÆ"
          fi
          
          if [ -n "$EMAIL_TO" ]; then
            echo "‚úÖ EMAIL_TO: ${EMAIL_TO:0:3}***@${EMAIL_TO##*@}"
          else
            echo "‚ùå EMAIL_TO: Êú™ÈÖçÁΩÆÔºà‰∏ç‰ºöÂèëÈÄÅÈÇÆ‰ª∂Ôºâ"
          fi
          
          if [ -n "$EMAIL_PASS" ]; then
            echo "‚úÖ EMAIL_PASS: ${EMAIL_PASS:0:4}************"
          else
            echo "‚ùå EMAIL_PASS: Êú™ÈÖçÁΩÆ"
          fi
          
          if [ -n "$EMAIL_TITLE" ]; then
            echo "‚úÖ EMAIL_TITLE: $EMAIL_TITLE"
          else
            echo "‚ö†Ô∏è  EMAIL_TITLE: Êú™ÈÖçÁΩÆÔºàÂ∞Ü‰ΩøÁî®ÈªòËÆ§Ê†áÈ¢òÔºâ"
          fi
          
          if [ -n "$EMAIL_CONTENT" ]; then
            echo "‚úÖ EMAIL_CONTENT: $EMAIL_CONTENT"
          else
            echo "‚ö†Ô∏è  EMAIL_CONTENT: Êú™ÈÖçÁΩÆÔºàÂ∞Ü‰ΩøÁî®ÈªòËÆ§ÂÜÖÂÆπÔºâ"
          fi
          
          echo "========================================"
          
          if [ -z "$EMAIL_FROM" ] || [ -z "$EMAIL_TO" ] || [ -z "$EMAIL_PASS" ]; then
            echo "‚ö†Ô∏è  Ë≠¶Âëä: ÈÇÆ‰ª∂ÈÖçÁΩÆ‰∏çÂÆåÊï¥ÔºåÂ∞Ü‰∏ç‰ºöÂèëÈÄÅÈÇÆ‰ª∂"
          else
            echo "‚úÖ ÈÇÆ‰ª∂ÈÖçÁΩÆÂÆåÊï¥Ôºå‰∏ãËΩΩÂÆåÊàêÂêéÂ∞ÜÂèëÈÄÅÈÇÆ‰ª∂"
          fi
          
      # ‚≠ê ‰øÆÊîπÈÖçÁΩÆÊñá‰ª∂ÔºåÊ†πÊçÆÈÄâÈ°πÂÜ≥ÂÆöÊòØÂê¶ÂêØÁî®PDFËΩ¨Êç¢
      - name: ÈÖçÁΩÆËæìÂá∫Ê†ºÂºè
        run: |
          echo "========================================"
          echo "‚öôÔ∏è  ËæìÂá∫Ê†ºÂºèÈÖçÁΩÆ"
          echo "========================================"
          echo "ÂΩìÂâçÈÄâÊã©: $OUTPUT_FORMAT"
          
          if [ "$OUTPUT_FORMAT" == "Âè™‰øùÁïôÂéüÂõæÔºà‰∏çËΩ¨PDFÔºâ" ]; then
            echo "‚ÑπÔ∏è Á¶ÅÁî® img2pdf Êèí‰ª∂..."
            # Ê≥®ÈáäÊéâÈÖçÁΩÆÊñá‰ª∂‰∏≠ÁöÑ img2pdf Êèí‰ª∂
            sed -i 's/^  after_album:/#  after_album:/g' assets/option/option_workflow_download.yml
            sed -i 's/^    - plugin: img2pdf/#    - plugin: img2pdf/g' assets/option/option_workflow_download.yml
            sed -i 's/^      kwargs:/#      kwargs:/g' assets/option/option_workflow_download.yml
            sed -i 's/^        pdf_dir:/#        pdf_dir:/g' assets/option/option_workflow_download.yml
            sed -i 's/^        filename_rule:/#        filename_rule:/g' assets/option/option_workflow_download.yml
            echo "‚úÖ Â∑≤Á¶ÅÁî® PDF ËΩ¨Êç¢ÔºåÂ∞ÜÂè™‰øùÁïôÂéüÂßãÂõæÁâá"
          else
            echo "‚úÖ ÂêØÁî® PDF ËΩ¨Êç¢Ê®°Âºè"
          fi
          echo "========================================"
          
      - name: ËøêË°å‰∏ãËΩΩËÑöÊú¨
        run: |
          cd ./usage/
          python workflow_download.py
          
      # ‚≠ê ‰øÆÊîπÔºöÊ†πÊçÆÈÄâÈ°πÂ§ÑÁêÜÊñá‰ª∂
      - name: Â§ÑÁêÜËæìÂá∫Êñá‰ª∂
        run: |
          cd $JM_DOWNLOAD_DIR
          
          if [ "$OUTPUT_FORMAT" == "Âè™‰øùÁïôPDFÔºàÂà†Èô§ÂéüÂõæÔºâ" ]; then
            echo "========================================"
            echo "üóëÔ∏è  Ê∏ÖÁêÜÂéüÂßãÂõæÁâáÔºàÂè™‰øùÁïôPDFÔºâ"
            echo "========================================"
            
            # Âà†Èô§ÂéüÂßãÂõæÁâá
            find . -type f \( -name "*.jpg" -o -name "*.png" -o -name "*.jpeg" -o -name "*.webp" \) -delete
            rm -f „ÄêÂá∫Èîô‰∫Ü„Äë*.log
            find . -type d -empty -delete
            
            echo "‚úÖ Â∑≤Ê∏ÖÁêÜÂéüÂßãÂõæÁâáÔºåÂè™‰øùÁïôPDF"
            
          elif [ "$OUTPUT_FORMAT" == "Âè™‰øùÁïôÂéüÂõæÔºà‰∏çËΩ¨PDFÔºâ" ]; then
            echo "========================================"
            echo "üóëÔ∏è  Ê∏ÖÁêÜPDFÊñá‰ª∂ÔºàÂè™‰øùÁïôÂéüÂõæÔºâ"
            echo "========================================"
            
            # Âà†Èô§PDFÁõÆÂΩï
            if [ -d "pdf" ]; then
              rm -rf pdf
              echo "‚úÖ Â∑≤Âà†Èô§ PDF ÁõÆÂΩï"
            else
              echo "‚ÑπÔ∏è PDF ÁõÆÂΩï‰∏çÂ≠òÂú®ÔºàÁ¨¶ÂêàÈ¢ÑÊúüÔºâ"
            fi
            
            echo "‚úÖ ‰øùÁïôÂéüÂßãÂõæÁâáÔºåÊú™ÁîüÊàêPDF"
          fi
          
          echo "========================================"
          
      - name: Ê£ÄÊü•ÊúÄÁªàÊñá‰ª∂
        run: |
          echo "========================================"
          echo "üìÅ ÊúÄÁªàÊñá‰ª∂Ê£ÄÊü•"
          echo "========================================"
          
          cd $JM_DOWNLOAD_DIR
          
          if [ "$OUTPUT_FORMAT" == "Âè™‰øùÁïôPDFÔºàÂà†Èô§ÂéüÂõæÔºâ" ]; then
            if [ -d "pdf" ]; then
              PDF_COUNT=$(find pdf -name "*.pdf" 2>/dev/null | wc -l)
              echo "üìÑ PDFÊñá‰ª∂Êï∞Èáè: $PDF_COUNT"
              echo ""
              echo "PDFÊñá‰ª∂ÂàóË°®:"
              find pdf -name "*.pdf" -exec ls -lh {} \; 2>/dev/null || echo "Êó†PDFÊñá‰ª∂"
              echo ""
              echo "PDFÊÄªÂ§ßÂ∞è: $(du -sh pdf 2>/dev/null | cut -f1 || echo '0')"
            else
              echo "‚ùå PDFÁõÆÂΩï‰∏çÂ≠òÂú®"
            fi
          else
            IMAGE_COUNT=$(find . -type f \( -name "*.jpg" -o -name "*.png" -o -name "*.jpeg" -o -name "*.webp" \) 2>/dev/null | wc -l)
            echo "üñºÔ∏è  ÂõæÁâáÊñá‰ª∂Êï∞Èáè: $IMAGE_COUNT"
            echo ""
            echo "‰∏ãËΩΩÁõÆÂΩïÁªìÊûÑ:"
            tree -L 2 -h . 2>/dev/null || ls -lhR .
            echo ""
            echo "ÊÄªÂ§ßÂ∞è: $(du -sh . | cut -f1)"
          fi
          
          echo "========================================"

      - name: ÂéãÁº©Êñá‰ª∂
        run: |
          cd $JM_DOWNLOAD_DIR
          tar -zcvf "../$ZIP_NAME" ./
          mv "../$ZIP_NAME" .

      - name: ‰∏ä‰º†ÁªìÊûú
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.UPLOAD_NAME }}
          path: ${{ env.JM_DOWNLOAD_DIR }}/${{ env.ZIP_NAME }}
          if-no-files-found: error
          retention-days: 90
          
      - name: ÂèëÈÄÅÈÇÆ‰ª∂ÈÄöÁü•
        if: ${{ env.EMAIL_TO != '' && env.EMAIL_FROM != '' && env.EMAIL_PASS != '' }}
        continue-on-error: true
        run: |
          echo "üìß ÂáÜÂ§áÂèëÈÄÅÈÇÆ‰ª∂..."
          python assets/send_email_with_pdf.py
          echo "‚úÖ ÈÇÆ‰ª∂‰ªªÂä°ÂÆåÊàê"
